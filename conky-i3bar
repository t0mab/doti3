### Conky configuration file
## Output is printed to the console -> i3bar
# Modified: 27.11.2011 - mseed : http://www.fastlinux.eu

###
# use_xft yes
# xftfont Helvetica:size=15
# xftalpha 0.9

## No output to X <yes/no>
out_to_x no

## Create own window to draw <yes/no>
own_window no

## Print everything to console?
out_to_console yes

## Use double buffering (reduces flicker, not needed for console output)
double_buffer no

## Set to yes if you want Conky to be forked in the background
background no

## Update interval in seconds
update_interval 1

## This is the number of times Conky will update before quitting.
## Set to zero to run forever.
total_run_times 0

## Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
short_units yes

## Use celsius for temperature unit
temperature_unit celsius
## How strict should if_up be when testing an interface for being up?
## The value is one of up, link or address, to check for the interface
## being solely up, being up and having link or being up, having link
## and an assigned IP address.
if_up_strictness address

## Add spaces to keep things from moving about?  This only affects certain objects.
## use_spacer should have an argument of left, right, or none
use_spacer left

## Force UTF8? note that UTF8 support required XFT
override_utf8_locale no

## number of cpu samples to average
## set to 1 to disable averaging
cpu_avg_samples 4

max_text_width 0

## Sensors examples
# Top Process: ${top name 1}
# Root: {fs_used /}/${fs_size /} /home ${fs_free /home} /${fs_size /home}
# Load: ${loadavg 1} ${loadavg 2} ${loadavg 3}
# Load: $loadavg
# Swap: ${swap}/${swapmax} (${swapperc}%)
# Processes: ${running_processes} / ${processes}
# CPU: $cpu%
# HDD: $diskio_read :Read $diskio_write :Write
# Temp: Core0: ${exec sensors | awk '/Core 0/ {print $3}'} Core1: ${exec sensors | awk '/Core 1/ {print $3}'}
# Freq: ${freq cpu0}Mhz
# Uptime: $uptime
# Kernel:$kernel on $machine
# Name: $nodename - $sysname
# Battery: ${battery_percent BAT0}%

## TO BE FIXED LATER !
#{
#  "full_text": " ${exec weather --headers="Temperature" -q | awk '/Temperature/ {print $2}'}C ${exec weather --headers="Sky conditions" -q | awk '/Sky conditions/ {print $3 " " $4}'}07",
#  "color": "\#9C9C9C"
#},

TEXT

[ \
  { "full_text" : " [ ", "color" : "\#EEE8D5", "separator" : false, "separator_block_width" : 3 }, \
  { "full_text" : "${loadavg }", "color" : ${if_match ${loadavg 1}>5}"\#DC322F" ${else}"\#268BD2"${endif}, "separator" : false, "separator_block_width" : 3 }, \
\
  { "full_text" : "] [cpu ", "color" : "\#EEE8D5", "separator" : false, "separator_block_width" : 3 }, \
  { "full_text" : "${cpu cpu0}%", "color" : ${if_match ${cpu cpu0}>50}"\#DC322F"${else}"\#268BD2"${endif}, "min_width" : 25, "separator" : false, "separator_block_width" : 3 }, \
\
  { "full_text" : "] [ ", "color" : "\#EEE8D5", "separator" : false, "separator_block_width" : 3 }, \
  { "full_text" : "${memperc}%", "color" : ${if_match ${memperc}>50}"\#DC322F"${else}"\#268BD2"${endif}, "min_width" : 25, "separator" : false, "separator_block_width" : 3 }, \
\
  { "full_text" : "] [ ", "color" : "\#EEE8D5", "separator" : false, "separator_block_width" : 3 }, \
  { "full_text" : "${fs_used_perc /}% ", "color" : "\#268BD2", "separator" : false, "separator_block_width" : 3 }, \
\
  { "full_text" : "] [", "color" : "\#EEE8D5", "separator" : false, "separator_block_width" : 3 }, \
  { "full_text" : "${time %d %B %Y %H:%M}", "color" : "\#268BD2", "separator" : false, "separator_block_width" : 3 }, \
\
  { "full_text": " ♪ ${exec pacmd list-sinks | grep volume | head -1 | cut -d " " -f6} ", "color":"\#268BD2"}, \
  { "full_text" : "]", "color" : "\#EEE8D5", "separator" : false, "separator_block_width" : 3 } \
],
